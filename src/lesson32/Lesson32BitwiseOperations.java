package lesson32;

import org.w3c.dom.ls.LSOutput;

public class Lesson32BitwiseOperations {
    public static void main(String[] args) {
        //| 0      |0      |0    |0    |0   |1   |1   |0   |
        //| 128    |64     |32   |16   |8   |4   |2   |1   |
        //128 64 32 16 8 4 2 1   8*0 + 4*1 + 2*1 + 1*0 = 6
        int a = 6;      //0000 0110;
        int b = 10;     //0000 1010;
        //Логическое умножение (&) - если у обоих операндов 1, то вернет 1, иначе 0:
        //0000 0010
        int c = a & b;
        System.out.println(c); // 2

        //Логическое сложение (|) - если хоть у одного операнда 1, то вернет 1, иначе 0:
        //0000 1110
        int d = a | b;
        System.out.println(d);   //14

        //Логическое исключающее ИЛИ (^) (еще называют XOR) -
        // если у одного операнда 1, а у другого 0, то вернет 1, иначе 0:
        //0000 1100
        int e = a ^ b;
        System.out.println(e);   //12

        //Логическое отрицание (~). Действует на один операнд. Инверсия значений разрядов -
        // если разряд равен 1, то вернет 0, если равен 0, то вернет 1:
        // 1111 1001
        int f =  ~a;
        System.out.println(Integer.toBinaryString(f));   //9

        //x<<y двигает разряды числа x на y значений влево
        //0001 1000
        int g = a<<2;
        System.out.println(g);   //24

        //x>>y двигает разряды числа x на y значений вправо
        //0000 0001
        int h = a>>2;
        //0000 0010
        int i = b>>2;
        System.out.println(h);   // 1
        System.out.println(i);   // 2


    }
}
